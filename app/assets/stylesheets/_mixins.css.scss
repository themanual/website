// TODO remove in favour for newest bourbon/sass
@function valueof($val) {
  @return ($val / ($val * 0 + 1));
}

@function em($value, $base: $rem-value) {
  @if not unitless($value) {
      $value: strip-units($value);
  }
  @if not unitless($base) {
      $base: strip-units($base);
  }
  @return ($value / $base) * 1em;
}

@mixin rem($props, $value, $base: $rem-base) {
  @if unitless($value)    { $value: $value * 1px; }
  @if not unitless($base) { $base: valueof($base); }

  @each $prop in $props {
    @if unit($value) == "px"
    {
      #{$prop}: $value;
      #{$prop}: (valueof($value) / $base) * 1rem;
    }
    @else if unit($value) == "rem"
    {
      #{$prop}: (valueof($value) * $base) * 1px;
      #{$prop}: $value;
    }
  }
}

@mixin media-object {
  @include clearfix;
  > * { display: block; }
  > *:first-child {
    float: left;
    @content;
  }
  > *:first-child ~ * { overflow: hidden; }
}

@mixin coretext {
  .tr-coretext & {
    -webkit-font-smoothing: antialiased;
    font-weight: 500;
    @content;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: #{alpha(opacity=$opacity-ie)};
}

@mixin text-and-border-color($color) {
  border-color: $color;
  color: $color;
}

@mixin animation-fix {
  * { -webkit-transform: translateZ(0px); }
}

@mixin middot-break($h:.5em) {
  display: block; visibility: hidden; height: $h;
}

@function divider() {
  @return solid 1px $c-divider;
}

@function sub-divider() {
  @return dashed 1px darken($c-divider, 5%);
}

@mixin colored-link {
  &:link, &:visited {
    @content
  }

  &:hover,
  &:focus,
  &:active {
    color: #000;
  }
}

@mixin underlined-link {
  &:link,
  &:visited {
    @content;
  }

  &:hover,
  &:focus,
  &:active {
    border-bottom: solid 1px;
  }
}

%visuallyhidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}

%heading-sc {
  font-family: $type-sans;
  @include rem(font-size, 15px);
  text-transform: uppercase;
  letter-spacing: .1em;
  word-spacing: .15em;
}

%heading-sc-light {
  @extend %heading-sc;
  color: gray(60%);
}

%heading-sc-heavy {
  @extend %heading-sc;
  font-weight: weight(medium);
  color: gray(20%);
}

@mixin issue-number {
  font-family: $type-sans;
  font-weight: weight(bold);
  @include color-by-issue(background);

  padding-right:  .36em;
  padding-left:   .36em;
  padding-bottom: .07em;
  padding-top:    .03em;

  color: #fff;
  border-radius: .15em;
}

.text h1 .issue-number {
  font-weight: weight(black);
}

.issue-number {
  @include issue-number;
}

@mixin blacklink {
  color: #000;

  &:hover {
    text-decoration: underline;
  }
}

@mixin blacklink-child {
  a {
    @include blacklink;
  }
}