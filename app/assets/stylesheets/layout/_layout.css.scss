body {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
  > #content { flex: 1; }
}

@mixin spacing($props, $times: 1) {
  @each $prop in $props {
    @include rem($prop, $times * 1.5rem);
  }
}

// Horizontal
.l-x    {
                                @include rem(padding-left padding-right,  1.5rem);
  @include media-upto($bp-m) {  @include rem(padding-left padding-right,  1.1rem); }
}

// Vertical
.l-p    { @include spacing(padding-top padding-bottom, 1.0); }
.l-pp   { @include spacing(padding-top padding-bottom, 1.5); }
.l-ppp  { @include spacing(padding-top padding-bottom, 2.0); }
.l-m    { @include spacing(margin-top margin-bottom, 1.0); }
.l-mm   { @include spacing(margin-top margin-bottom, 1.5); }
.l-mmm  { @include spacing(margin-top margin-bottom, 2.0); }

// General rules.
.l-row  { @include row; }
.l-wrap { @include outer-container; }

.l-block {
  @extend .l-x;
  > *  { @extend .l-wrap; }
}
.l-container {
  @extend .l-block;
  @extend .l-p;
}

.l-line-t { border-top: divider(); }
.l-line-b { border-bottom: divider(); }
.l-line   { @extend .l-line-t; @extend .l-line-b; }

.l-col {
  @include centered;
  box-sizing: content-box;
}
.l-col-single   { @extend .l-col; @include rem(max-width, $singlecol-width); }
.l-col-reading  { @extend .l-col; @include rem(max-width, $reading-width);   }

.l-stack-lined > *  {
  @extend .l-p;
  border-top: divider();
}

.l-flexcenter {
  display: flex;
  align-items: center;
  > * { flex: 1; margin: auto; }
}

// Other columns
@include make-grid();

.l-fl-l { float: left   !important; }
.l-fl-r { float: right  !important; }
.l-cl-b { clear: both   !important; }
.l-cl-l { clear: left   !important; }
.l-cl-r { clear: right  !important; }