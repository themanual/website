body {
  display: flex;
  min-height: 100vh;
  flex-direction: column;
  > #content { flex: 1; }
}

@mixin spacing($props, $times: 1) {
  @each $prop in $props {
    @include rem($prop, $times * 1.5rem);
  }
}

// Horizontal
.l-x    {
                                @include rem(padding-left padding-right,  1.5rem);
  @include media-upto($bp-m) {  @include rem(padding-left padding-right,  1.1rem); }
}

// Vertical
.l-p    { @include spacing(padding-top padding-bottom, 1.0); }
.l-pp   { @include spacing(padding-top padding-bottom, 1.5); }
.l-ppp  { @include spacing(padding-top padding-bottom, 2.0); }
.l-m    { @include spacing(margin-top margin-bottom, 1.0); }
.l-mm   { @include spacing(margin-top margin-bottom, 1.5); }
.l-mmm  { @include spacing(margin-top margin-bottom, 2.0); }

// General rules.
.l-row  { @include row; }
.l-wrap { @include outer-container; }

.l-block {
  @extend .l-x;
  > *  { @extend .l-wrap; }
}
.l-container {
  @extend .l-block;
  @extend .l-p;
}

.l-line-t { border-top: divider(); }
.l-line-b { border-bottom: divider(); }
.l-line   { @extend .l-line-t; @extend .l-line-b; }

.l-col {
  @include centered;
}
.l-reading  { @include rem(max-width, $width-reading); }
.l-single   { @include rem(max-width, $width-single); }
.l-single-l { @include rem(max-width, $width-single-larger); }
.l-col-single   { @extend .l-col; @extend .l-single; }
.l-col-reading  { @extend .l-col; @extend .l-reading; }

.l-cols > * {
 @include spacing(margin-top);
}

.l-stack-lined > *  {
  @extend .l-p;
  + * { border-top: divider(); }
}

.l-flexcenter {
  display: flex;
  align-items: center;
  > * { flex: 1; margin: auto; }
}

.l-fl-l { float: left   !important; }
.l-fl-r { float: right  !important; }
.l-cl-b { clear: both   !important; }
.l-cl-l { clear: left   !important; }
.l-cl-r { clear: right  !important; }

//
// Full Grid
//

// NOT Breakpoint-Specific
@include make-cols();
@include make-gaps();
@include make-stacked();

// Breakpoint-specific
@each $bp in $bps {
  $class: nth($bp, 1);
  $value: nth($bp, 2);
  @include media-from($value) {
    @include make-cols($class);
    @include make-gaps($class);
  }
  @include media-upto($value) {
    @include make-stacked($class);
  }
}

.max-8 { max-width: flex-grid(8) / 100% * $max-width; }
.max-6 { max-width: flex-grid(6) / 100% * $max-width; }
