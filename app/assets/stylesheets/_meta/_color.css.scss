// General Colors
$c-text-darker:       hsl(0, 0%, 5%);
$c-text-body:         hsl(0, 0%, 20%);
$c-text-heading:      #000000;
$c-text-blockquote:   hsl(0, 0%, 40%);
$c-text-caption:      hsl(0, 0%, 50%);
$c-text-asides:       hsl(0, 0%, 40%);
$c-text-dull:         hsl(0, 0%, 30%);

$c-divider:           gray(90%);
$c-bg-gray:           gray(96%);

$c-blue:    #0055DD;
$c-purple:  #8200E6;

$c-field-invalid: #FF4D4D;
$c-field-valid:   #54BF54;

// Published issues, and issues colors
$issues:        (1, 2, 3, 4);
$issues-colors: (#EF3E42, #52BAE1, #EC9A3A, #2DC3AB);

// Returns the color of issue $i or 'latest'
@function issue-color($i) {
  @if $i == 'latest'  {
    @return issue-color(nth($issues, length($issues)));
  }
  @else {
    @return nth($issues-colors, $i);
  }
}

// Prefixes the CSS rule which calls the mixin
// with .issue-N and sets $props to that issueâ€™s color
// Also takes block content for more properties.
@mixin color-by-issue($props) {
  @each $i in $issues {
    .issue-#{$i} & {
      @each $prop in $props {
        #{$prop}: issue-color($i);
        @content;
      }
    }
  }
}

// Shorthand to set issue-colored links with hover states
@mixin link-color-by-issue {
  @include color-by-issue(color) {
    @include colored-link;
  }
}