// Grid
$column: 60px;
$gutter: 35px;
$grid-columns: 12;
$max-width: 1350px;

.l-row {
  @include row;
}

.l-grid {
  @include row;
  @include outer-container;
}

.l-grid-padded {
  @extend .l-grid;
  @extend .l-padded-h;
}

@for $i from 1 through ($grid-columns - 1) {
  .l-col-#{$i} { @include span-columns($i); }
}
.l-col-half   { @include span-columns($grid-columns/2); }
.l-col-third  { @include span-columns($grid-columns/3); }
.l-col-fourth { @include span-columns($grid-columns/4); }
.l-col-fill   { @include fill-parent(); }

@mixin make-cols($class) {
  // Numeric classes (1 to $grid-columns)
  @for $i from 1 through ($grid-columns) {
    .l-col-#{$class}-#{$i} { @include span-columns($i); }
  }
  // Word classes
  .l-col-#{$class}-half   { @include span-columns($grid-columns/2); }
  .l-col-#{$class}-third  { @include span-columns($grid-columns/3); }
  .l-col-#{$class}-fourth { @include span-columns($grid-columns/4); }
  .l-col-#{$class}-fill   { @include fill-parent(); }
}

@mixin make-stacked($class) {
  .l-stacked-#{$class} > * + * {
    @include container-spacing(margin-top);
  }
}

@mixin make-gaps($class) {
  // Omega
  .l-omega-#{class} { @include omega; }
  // Shift
  @for $i from 1 through ($grid-columns - 1) {
    .l-shift-#{$class}-#{$i} { @include shift($i); }
  }
}

@mixin make-grid {
  @each $bp in $bps {
    $class: nth($bp, 1);
    $value: nth($bp, 2);
    @include media-from($value) {
      @include make-cols($class);
      @include make-gaps($class);
    }
    @include media-upto($value) {
      @include make-stacked($class);
    }
  }
}

@include make-grid();